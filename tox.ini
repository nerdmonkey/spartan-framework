[tox]
envlist = py311, lint, security, format-check, type-check, coverage, format, unit, integration, feature, serverless-check, clean
isolated_build = false
skip_missing_interpreters = true

[testenv]
deps =
    pytest>=8.3.3
    pytest-cov>=5.0.0
    pytest-mock>=3.12.0
    pytest-asyncio>=0.21.1
    faker>=30.8.2
    moto>=4.2.9
skip_install = true
allowlist_externals =
    poetry
    pip
commands_pre =
    poetry install --with dev
commands =
    pytest {posargs:tests/}

[testenv:coverage]
deps =
    {[testenv]deps}
    coverage[toml]>=7.0
skip_install = true
commands =
    poetry install --with dev
    pytest --cov=app --cov-report=term-missing --cov-report=html --cov-report=xml {posargs:tests/}

[testenv:lint]
deps =
    flake8>=6.1.0
    isort>=5.12.0
    black>=23.9.1
skip_install = true
commands =
    poetry install --with dev
    flake8 --config=.flake8 app/ tests/ --exclude=app/exceptions/__init__.py
    isort --check-only --diff app/ tests/
    black --check --diff app/ tests/

[testenv:format]
deps =
    isort>=5.12.0
    black>=23.9.1
    autoflake>=2.2.1
skip_install = true
commands =
    poetry install --with dev
    autoflake app/ tests/
    isort app/ tests/
    black app/ tests/

[testenv:security]
deps =
    bandit>=1.7.5
skip_install = true
commands =
    poetry install --with dev
    bandit -r app/ -f json -o bandit-report.json
    bandit -r app/

[testenv:format-check]
deps =
    isort>=5.12.0
    black>=23.9.1
skip_install = true
commands =
    poetry install --with dev
    isort --check-only app/ tests/
    black --check app/ tests/

[testenv:type-check]
deps =
    mypy>=1.5.0
    types-requests
    types-python-dateutil
skip_install = true
commands =
    poetry install --with dev
    mypy app/ --ignore-missing-imports

[testenv:unit]
skip_install = true
commands =
    poetry install --with dev
    pytest tests/unit/ {posargs}

[testenv:integration]
skip_install = true
commands =
    poetry install --with dev
    pytest tests/integration/ {posargs}

[testenv:feature]
skip_install = true
commands =
    poetry install --with dev
    pytest tests/feature/ {posargs}

[testenv:serverless-check]
deps =
skip_install = true
allowlist_externals =
    serverless
    npm
commands_pre =
    npm install -g serverless
commands =
    serverless print

[testenv:clean]
deps =
skip_install = true
allowlist_externals =
    find
    rm
commands =
    find . -type f -name "*.pyc" -delete
    find . -type d -name "__pycache__" -delete
    rm -rf .pytest_cache/
    rm -rf .coverage
    rm -rf htmlcov/
    rm -rf coverage.xml
    rm -rf bandit-report.json
    rm -rf .tox/

[flake8]
max-line-length = 88
exclude =
    .git,
    __pycache__,
    .venv,
    .tox,
    build,
    dist,
    .serverless,
    .vscode,
    app/exceptions/__init__.py
ignore =
    E203,  # whitespace before ':'
    W503,  # line break before binary operator
    E501,  # line too long (handled by black)

[coverage:run]
source = app
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */.venv/*
    */node_modules/*
    .serverless/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
