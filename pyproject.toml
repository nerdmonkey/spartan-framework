[tool.poetry]
name = "spartan-framework"
version = "0.1.8"
description = "An infrastructure framework for serverless development in AWS"
authors = ["Sydel Palinlin <sydel.palinlin@gmail.com>"]
license = "MIT"
readme = "README.md"
package-mode = false


[tool.poetry.dependencies]
python = "^3.11"
httpx = "0.28.1"
mangum = "0.19.0"
python-dotenv = "^1.0.0"
email-validator = "^2.0.0.post2"
jsonpickle = "4.0.2"
python-jose = "^3.3.0"
pymysql = "^1.1.0"
pydantic-settings = "^2.5.2"
pydantic = "^2.10.6"
sqlalchemy = "2.0.38"
aws-lambda-powertools = "3.8.0"
boto3 = "^1.28.66"
pg8000 = "^1.31.2"
fastapi = "0.115.11"
starlette = "0.46.0"
alembic = "^1.13.3"
pydantic-core = "2.31.1"
pyasn1 = "0.6.1"


[tool.poetry.group.dev.dependencies]
autoflake = "2.3.1"
boto3 = "^1.28.66"
alembic = "^1.13.3"
pytest = "8.3.5"
pytest-cov = "6.0.0"
black = "25.1.0"
isort = "6.0.1"
flake8 = "7.1.2"
bandit = "1.8.3"
poetry-plugin-export = "^1.8.0"
pytest-mock = "^3.12.0"
pytest-asyncio = "0.25.3"
faker = "30.8.2"
mocker = "^1.1.1"
moto = "5.1.1"
sphinx = "^7.1.0"
sphinx-rtd-theme = "^3.0.2"
sphinx-autodoc-typehints = "^1.25.0"
myst-parser = "^2.0.0"
pre-commit = "^4.0.1"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests"
]


[tool.black]
line-length = 80
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''


[tool.isort]
profile = "black"
line_length = 80
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true


[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg",
]


[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]


[tool.autoflake]
remove-all-unused-imports = true
remove-unused-variables = true
remove-duplicate-keys = true
ignore-init-module-imports = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
